type User {
  id: ID!
  email: String!
  username: String!
}

type Password {
  id: ID!
  userId: ID!
  name: String!
  password: String!
}

type UserWithToken {
  user: User!
  token: String!
}

input NewUser {
  email: String!
  username: String!
  password: String!
}

input UserSignIn {
  email: String!
  password: String!
}

input NewPassword {
  userId: ID!
  name: String!
  password: String!
}

type Mutation {
  signUp(input: NewUser!): User!
  createPassword(input: NewPassword!): Password!
  signIn(input: UserSignIn!): UserWithToken!
}

type Query {
  queryUserPasswords(userId: String!): [Password]!
}
